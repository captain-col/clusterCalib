Define the constant runtime parameters.  These are the parameters that
should not be looked up from a database.

Define the time per digit in the TPulseDigit.  This specifies the minimum
and is used to calculate the number of bins in the FFT.  The exact value
isn't important, but it should be shorter (or at least equal to) the
sampling time.  This does not control the actual calibration since the
digitization step for a particular channel is found from the database (or
was specified in elecSim for the MC).

< clusterCalib.digitization.step = 250 ns >

Define the maximum length of a pulse.  The exact value isn't important, but
should be considerably longer than a pulse.  There is a trade off since
smaller values will run slightly faster.

< clusterCalib.digitization.pulse = 100000 ns >

Define the maximum length of the impulse response function.  The exact
value isn't important as long as it is longer than the response function.
There is a trade off since smaller values will run slightly faster.

< clusterCalib.digitization.response = 100000 ns >

Set the amount of time smoothing to be applied to the input wires.  The
value controls the number of "side-band" samples to use when smoothing a
particular sample.  A value of zero means no smoothing.

< clusterCalib.smoothing.wire = 2 >

After the wire channels are calibrated, the output FADC signals are
analyzed for peaks using TSpectrum::SearchHighRes() using a very loose
acceptance criteria.  Peaks found by the search are then examined to see if
they are consistent with a real peak.  These parameters control the peak
acceptance.  The charge is the charge value at the peak.  The deconvolution
is the estimated power from the SearchHighRes() output.

< clusterCalib.peakSearch.charge = 500 >
< clusterCalib.peakSearch.deconvolution = 300 >

Set the limit on how wide a time cluster can be before the cluster is split
into multiple hits.

< clusterCalib.peakSearch.rmsLimit = 4000 ns >
